#BlueJ class context
comment0.params=inStream
comment0.target=Scanner(java.io.InputStream)
comment0.text=\n\ Scanner\ constructor\ for\ construction\ of\ a\ scanner\ that\ \n\ uses\ an\ InputStream\ object\ for\ input.\ \ \n\ Usage\:\ \n\ FileInputStream\ inStream\ \=\ new\ FileInputStream(new\ File(<file\ name>);\n\ Scanner\ lex\ \=\ new\ Scanner(inStream);\n\ @param\ inStream\ the\ input\ stream\ to\ use\n
comment1.params=inString
comment1.target=Scanner(java.lang.String)
comment1.text=\n\ Scanner\ constructor\ for\ constructing\ a\ scanner\ that\ \n\ scans\ a\ given\ input\ string.\ \ It\ sets\ the\ end-of-file\ flag\ an\ then\ reads\n\ the\ first\ character\ of\ the\ input\ string\ into\ the\ instance\ field\ currentChar.\n\ Usage\:\ Scanner\ lex\ \=\ new\ Scanner(input_string);\n\ @param\ inString\ the\ string\ to\ scan\n
comment10.params=
comment10.target=java.lang.String\ scanNumber()
comment10.text=\n\ This\ scans\ the\ number\n\ @return\ the\ number\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment11.params=
comment11.target=java.lang.String\ scanIdentifier()
comment11.text=\n\ This\ scans\ the\ identifier\n\ @return\ the\ next\ identifier\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment12.params=
comment12.target=java.lang.String\ scanOperator()
comment12.text=\n\ This\ scans\ the\ operator\n\ @return\ the\ next\ operator\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment13.params=
comment13.target=java.lang.String\ scanWhiteSpaces()
comment13.text=\n\ Iterates\ through\ the\ whiteSpaces\n\ @return\ the\ nextToken\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment14.params=
comment14.target=void\ scanSingleLine()
comment14.text=\n\ Skips\ the\ line\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment15.params=
comment15.target=void\ scanMultipleLines()
comment15.text=\n\ Scans\ multiple\ lines\ until\ it\ reaches\ end\ of\ line\n\ @throws\ ScanErrorException\ \ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment16.params=
comment16.target=java.lang.String\ scanComment()
comment16.text=\n\ Scans\ the\ comment\ and\ or\ divide\n\ @return\ the\ string\ of\ the\ next\ possible\ thing\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment17.params=unknown
comment17.target=boolean\ isSpecialCharacter(char)
comment17.text=\n\ Checks\ if\ this\ is\ a\ special\ character\n\ @param\ unknown\ the\ given\ character\n\ @return\ true\ if\ the\ special\ character\ is\ known;\ otherwise\ false\n
comment18.params=
comment18.target=java.lang.String\ nextToken()
comment18.text=\n\ Method\:\ nextToken\ of\ the\ file\n\ @return\ the\ nextToken\ in\ String\n\ @throws\ ScanErrorException\ this\ is\ thrown\ when\ there\ is\ a\ scanning\ error\n
comment2.params=
comment2.target=void\ getNextChar()
comment2.text=\n\ Method\:\ getNextChar\n\ This\ iterates\ the\ currentCharacter\n\ \ forward\ a\ character\ and\ catches\ all\ exceptions\n
comment3.params=expected
comment3.target=void\ eat(char)
comment3.text=\n\ Method\:\ eat\n\ This\ iterates\ the\ function\ with\ the\ next\ char\ and\ then\ sets\ the\ currentChar\ to\ the\ \n\ \ next\ character\ in\ the\ order\n\ @param\ expected\ the\ expected\ char\n\ @throws\ ScanErrorException\ if\ the\ expected\ and\ currentchar\ don't\ match\ up\n
comment4.params=
comment4.target=boolean\ hasNext()
comment4.text=\n\ Method\:\ hasNext\n\ @return\ true\ if\ it\ has\ next;\ otherwise\ false\n
comment5.params=unknown
comment5.target=boolean\ isDigit(char)
comment5.text=\n\ This\ checks\ in\ the\ given\ char\ is\ a\ digit\n\ @param\ unknown\ the\ given\ char\n\ @return\ true\ if\ unknown\ is\ a\ digit;\ otherwise\ false\n
comment6.params=unknown
comment6.target=boolean\ isLetter(char)
comment6.text=\n\ Checks\ if\ the\ given\ unknown\ is\ a\ letter\n\ @param\ unknown\ the\ given\ letter\n\ @return\ true\ if\ it\ is\ a\ letter;\ otherwise\ false\n
comment7.params=unknown
comment7.target=boolean\ isLowerCase(char)
comment7.text=\n\ Checks\ is\ the\ letter\ is\ lower\ case\n\ @param\ unknown\ the\ given\ letter\n\ @return\ true\ if\ hte\ letter\ is\ lower\ case;\ false\ otherwise\n
comment8.params=unknown
comment8.target=boolean\ isUpperCase(char)
comment8.text=\n\ Checks\ is\ the\ letter\ is\ upper\ case\n\ @param\ unknown\ the\ given\ letter\n\ @return\ true\ if\ the\ letter\ is\ upper\ case;\ false\ otherwise\n
comment9.params=unknown
comment9.target=boolean\ isWhiteSpace(char)
comment9.text=\n\ Checks\ is\ this\ is\ a\ white\ space\n\ @param\ unknown\ the\ given\ char\n\ @return\ true\ if\ it\ is\ a\ white\ space;\ otherwise\ false\n
numComments=19
